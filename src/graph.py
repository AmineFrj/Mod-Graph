# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mVEniof6NTjsLdJ1xgFBkZXKydgpaXeK
"""

import numpy as np
import matplotlib.pyplot as plt
from random import choice
import community as cm
import networkx as nx


import Cluster_Ensembles as CE

import pandas as pd 

def generate_document_auteurs(path_articles = "data/export_articles_EGC_2004_2018 (2).csv",
                              path_auteurs = "data/Liste_Auteurs_affiliation_photo.csv",
                              verbose = False):
  # reading csv file  
    article = pd.read_csv(path_articles, sep="\t")
    auteur =  pd.read_csv(path_auteurs, sep = ";")

    if verbose: 
        article.describe()

    article.groupby('year').agg('count')

    #Supprimer les lignes qui n'ont pas d'abstract
    article['abstract'].replace('',np.nan, inplace=True)
    article.dropna(subset=['abstract'], inplace = True)

    #Supprimer les lignes qui n'ont pas d'affliation
    auteur['Affiliation'].replace('',np.nan, inplace=True)
    auteur.dropna(subset=['Affiliation'], inplace = True)
    
    if verbose: 
       article

    docAut = pd.DataFrame(np.zeros((article.shape[0],len(auteur["Authors_Name"]))), columns =  auteur["Authors_Name"])
    if verbose: 
        docAut

    i=0
    for x in article["authors"]:
        if verbose:
            print(i)

        for j in x.split(", "):

            if verbose:
                print(j)
            if (np.sum(j == auteur["Authors_Name"])>0):

                if verbose:
                    print("trouv√©")
                docAut.ix[i,j] =1 
        i+=1
    if verbose:
        docAut

    docAut.sum()
    res_path = "data/results/docAut.csv"
    print(f"saving result to {res_path}")
    docAut.to_csv(res_path, sep=',')

if __name__ == "__main__":
	generate_document_auteurs()